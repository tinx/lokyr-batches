---
swagger: "2.0"
produces:
  - "application/json"
consumes:
  - "application/json"
schemes:
  - "https"
basePath: "/v1/"
securityDefinitions:
  basic_auth:
    type: "basic"
    description: "HTTP Basic Authentication with pre-shared credentials."
security:
  - "basic_auth": []
info:
  title: "Lokyr Batches"
  description: "This services manages production and ingredient batches."
  version: "1.0.0"
  contact:
    name: "Lokyr Support"
    email: "info@lokyr.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
paths:
  "/batch/production":
    get:
      tags:
        - "production batch"
      operationId: "productionBatchList"
      summary: "List all production batches"
      description: >
        This returns a list of production batches. There is no
        pagination. The entire list will be returned in one response.
        The list will only contain those batches that the user has
        access to.
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/productionBatch"
    post:
      tags:
        - "production batch"
      operationId: "productionBatchCreate"
      summary: "Add a new production batch"
      description: >
        Create a new production batch record and insert it into the
        database. The initial status will be 'setup'.
      parameters:
        - name: "body"
          in: "body"
          description: "Batch production object."
          required: true
          schema:
            $ref: '#/definitions/productionBatch'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/productionBatch"
        400:
          description: "Invalid batch size supplied."
        404:
          description: "productId not found."
  "/batch/production/{batchId}":
    get:
      tags:
        - "production batch"
      operationId: "productionBatchRead"
      summary: "Read production batch"
      description: >
        Fetch information on a specific production batch.
      parameters:
        - name: "batchId"
          in: "path"
          description: "ID of the batch to fetch."
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/productionBatch"
        400:
          description: "Invalid batchId supplied."
        404:
          description: "batch not found."
    put:
      tags:
        - "production batch"
      operationId: "productionBatchUpdate"
      summary: "Update production batch"
      description: >
        Update production batch properties.

        Setting the status to 'bottled' is a special operation and
        requires also setting the 'bottlingDate', 'bestBeforeDate' and
        'alcoholContent' fields.

        These three fields can only be set when the status is being
        changed to 'bottled'. 'alcoholContent' can also be changed
        again.
      parameters:
        - name: "batchId"
          in: "path"
          description: "ID of the batch to update."
          required: true
          type: "integer"
          format: "int64"
        - name: "body"
          in: "body"
          description: "Batch production object."
          required: true
          schema:
            $ref: '#/definitions/productionBatch'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/productionBatch"
        400:
          description: "Invalid values supplied."
        404:
          description: "batch not found."
    delete:
      tags:
        - "production batch"
      operationId: "productionBatchDelete"
      summary: "Delete production batch"
      description: >
        Removes the record of the production batch. This operation
        is only possible if there are no other records linked to
        this one.

        If any inspection reports, documents, split batches or other
        records reference a production batch, it can not be deleted.
      parameters:
        - name: "batchId"
          in: "path"
          description: "ID of the batch to delete."
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
        400:
          description: "invalid ID supplied"
        404:
          description: "batch not found"
  "/product":
    get:
      tags:
        - "product"
      operationId: "productList"
      summary: >
        Retrieve a list of all registered products.
      parameters: []
      responses:
        200:
          description: "successful operation"
    post:
      tags:
        - "product"
      operationId: "productCreate"
      summary: "Add a new product"
      description: >
        Create a new product record and insert it into the database.
      parameters:
        - name: "body"
          in: "body"
          description: "Product object."
          required: true
          schema:
            $ref: '#/definitions/product'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/product"
  "/product/{productId}":
    get:
      tags:
        - "product"
      operationId: "productRead"
      summary: "Read product"
      description: >
        Fetch information on a specific product.
      parameters:
        - name: "productId"
          in: "path"
          description: "ID of the product."
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/product"
        400:
          description: "Invalid productId supplied."
        404:
          description: "product not found."
    put:
      tags:
        - "product"
      operationId: "productUpdate"
      summary: "Update product"
      description: >
        Update product properties.
      parameters:
        - name: "productId"
          in: "path"
          description: "ID of the product to update."
          required: true
          type: "integer"
          format: "int64"
        - name: "body"
          in: "body"
          description: "Product object."
          required: true
          schema:
            $ref: '#/definitions/product'
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/product"
        400:
          description: "Invalid values supplied."
        404:
          description: "product not found."
    delete:
      tags:
        - "produc"
      operationId: "productDelete"
      summary: "Delete product"
      description: >
        Removes the record of the product. This operation
        is only possible if there are no other records linked to
        this one.
      parameters:
        - name: "productId"
          in: "path"
          description: "ID of the product to delete."
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
        400:
          description: "invalid ID supplied"
        404:
          description: "product not found"
definitions:
  productionBatch:
    type: "object"
    required:
      - productId
      - size
    properties:
      id:
        type: "integer"
        format: "int64"
        title: "ID of this production batch."
        readOnly: true
      productId:
        type: "integer"
        format: "int64"
        title: "ID of the type of product to be produced."
      size:
        type: "integer"
        format: "int64"
        title: "Size of the production batch, in liters."
      status:
        type: "string"
        title: "Production status of this batch."
        description: >
          This describes the production status, or phase, of this
          batch. The status can only be updated following the forward
          progression.

          Changing the status to 'bottled' requires also updating
          the fields 'bottlingDate', 'bestBeforeDate' and
          'alcoholContent' in the same request.
        enum:
          - "setup"
          - "fermenting"
          - "partially filtered"
          - "filtered"
          - "ready for bottling"
          - "bottled"
          - "gone"
      bottlingDate:
        type: "string"
        format: "date"
        title: "Date of bottling of this batch."
        description: >
          Date of bottling of this production batch. Note that batches
          can't be partially bottled. Split the batch before bottling
          if you aren't bottling the entire volume.
      bestBeforeDate:
        type: "string"
        format: "date"
        title: "Guaranteed minimum shelf life."
        description: >
          Guaranteed 'best before' date for the bottled product. Note that
          the best before date must be set for batches when the status is
          set to 'bottled' and can't be set before that.
        readOnly: true
      alcoholContent:
        type: "number"
        format: "float"
        title: "Per volume content of alcohol."
        description: >
          Alcohol content (in percent per volume) of the production batch
          when it was bottled. This value must be set when the status
          is changed to 'bottled' and can't be set before that. It can
          be changed, later, though.

          Information on the alcohol content at other times during the
          production process can be recorded as a 'measurement' entry.
  product:
    type: "object"
    required:
      - name
    properties:
      id:
        type: "integer"
        format: "int64"
        title: "ID of this product typr."
        readOnly: true
      name:
        type: "string"
        title: "Unique name of this product type."

